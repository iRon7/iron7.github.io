<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ConvertTo-Expression on Power$nippets</title>
    <link>https://iron7.github.io/convertto-expression/</link>
    <description>Recent content in ConvertTo-Expression on Power$nippets</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://iron7.github.io/convertto-expression/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Read Me</title>
      <link>https://iron7.github.io/convertto-expression/readme/</link>
      <pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://iron7.github.io/convertto-expression/readme/</guid>
      <description>ConvertTo-Expression Serializes an object to a PowerShell expression
The ConvertTo-Expression cmdlet converts (serializes) an object to a PowerShell expression. The object can be stored in a variable, file or any other common storage for later use or to be ported to another system.
Converting back from an expression An expression can be restored to an object using the native Invoke-Expression cmdlet:
$Object = Invoke-Expression ($Object | ConverTo-Expression) Or Converting it to a [ScriptBlock] and invoking it with cmdlets along with Invoke-Command or using the call operator (&amp;amp;):</description>
    </item>
    
    <item>
      <title>Source &amp; download</title>
      <link>https://iron7.github.io/convertto-expression/source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://iron7.github.io/convertto-expression/source/</guid>
      <description>The ConvertTo-Expression script can be installed from the PowerShell Gallery:Install-Script -Name ConvertTo-Expression As it concerns a standalone script, installation isn&#39;t really required.If you don&#39;t have administrator rights, you might just download the script (or copy it) to the required location.You might than simply invoke the script using PowerShell dot sourcing:. .\ConvertTo-Expression.ps1 For source code versions, testers history etc., see the ConvertTo-Expression project site on GitHub.</description>
    </item>
    
  </channel>
</rss>